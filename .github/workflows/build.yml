# This workflow builds Operaton, and cache/restore any dependencies to improve the workflow execution time
name: build

on:
  push:
    branches: ["main"]
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/build.yml'
      - '**/*.md'
      - 'distro/**'
      - 'settings/**'
      - '.gitingore'
      - 'LICENSE'
      - 'NOTICE'
  pull_request:
    branches: ["main"]
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/build.yml'
      - '**/*.md'
      - 'distro/**'
      - 'settings/**'
      - '.gitingore'
      - 'LICENSE'
      - 'NOTICE'

permissions:
  contents: read
  checks: write
  id-token: write

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    if: env.SONAR_TOKEN && (github.ref == 'refs/heads/main' || github.event_name == 'pull_request')
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Prevent Shallow Clone to satisfy Sonarqube
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{runner.os}}-m2-${{hashFiles('**/pom.xml')}}
          restore-keys: ${{runner.os}}-m2
      - name: Maven Build
        shell: bash
        run: |
          echo "Creating a flag file 'executeJacoco' for each module containing tests. \
          This triggers activation of the 'coverage' profile."
          find . -type d | while read -r dir; do
            if [[ -d "$dir/src/test/java" || -d "$dir/target/generated-test-sources/java" ]]; then
              # Create an empty file target/executeJacoco if the condition is met
              mkdir -p "$dir/target"
              touch "$dir/target/executeJacoco"
            fi
          done
          ./mvnw install
      - name: Upload Build Artifacts
        id: upload-build-artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-artifacts
          path: |
            ${{github.workspace}}/**/jacoco.xml
            ${{github.workspace}}/**/target/surefire-reports/*.xml
          retention-days: 30
      - name: Upload Distros
        id: upload-distros
        uses: actions/upload-artifact@v4
        with:
          name: distros
          path: |
            ${{github.workspace}}/distro/*/assembly/target/*.gz

  static_analysis:
    name: Static Analysis
    needs: build
    runs-on: ubuntu-latest
    if: env.SONAR_TOKEN && (github.ref == 'refs/heads/main' || github.event_name == 'pull_request')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{runner.os}}-sonar
          restore-keys: ${{runner.os}}-sonar
      - name: Sonarqube Analysis
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
        shell: bash
        run: |
          find $(pwd) -name jacoco.xml
          ./mvnw -N org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=operaton_operaton \
          -Dsonar.coverage.jacoco.xmlReportPaths=$(find $(pwd) -name jacoco.xml | paste -sd ',' -)
        continue-on-error: true

  publish:
    name: Publish Reports
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - name: Debug
        run: find $(pwd) -name *.xml
      - name: Publish Test Report
        if: always()
        #https://github.com/marketplace/actions/junit-report-action
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: ${{github.workspace}}/**/target/surefire-reports/*.xml
          require_passed_tests: true
